{"version":3,"sources":["components/Films/styled.js","components/Film/styles.js","components/Film/index.tsx","components/Loading.ts","assets/images/logo.png","components/Navigation/styled.js","components/Navigation/index.tsx","components/Films/index.tsx","hooks.ts","constants.ts","redux/actions/filmsActions.ts","pages/films/index.tsx","components/NotFound/styled.js","assets/images/404.svg","components/NotFound/index.tsx","pages/notfound/index.tsx","services/getId.ts","services/getUrlArray.ts","components/PeopleItem/styled.js","components/PeopleItem/index.tsx","components/People/styled.js","components/People/index.tsx","redux/actions/peopleActions.ts","pages/people/index.tsx","components/Home/styled.js","components/Home/index.tsx","pages/home/index.tsx","components/Background/styled.js","components/Background/index.tsx","components/Layout/styled.js","components/Layout/index.tsx","components/FilmDetails/styled.js","components/FilmDetails/AboutFilm/styled.js","components/FilmDetails/AboutFilm/index.tsx","components/FilmDetails/index.tsx","services/getPeopleId.ts","services/api/fetchPeopleById.ts","pages/film/index.tsx","components/PersonDetails/styled.js","components/PersonDetails/index.tsx","services/api/fetchPersonById.ts","pages/person/styled.js","pages/person/index.tsx","pages/index.tsx","assets/global.styled.js","App.tsx","reportWebVitals.ts","redux/reducers/filmsReducer.ts","redux/reducers/peopleReducer.ts","redux/reducers/index.ts","redux/sagas/requests/films.ts","redux/sagas/handlers/films.ts","redux/sagas/requests/people.ts","redux/sagas/handlers/people.ts","redux/sagas/rootSaga.ts","redux/store.ts","index.tsx"],"names":["Container","styled","div","FilmComponent","props","episode","title","navigate","img","process","onClick","alt","src","Loading","NavigationContainer","nav","Navigation","person","isFilm","className","to","FilmsComponent","films","logo","length","map","film","episode_id","useAppDispatch","useDispatch","useAppSelector","useSelector","FETCH_FILMS_REQUEST","FETCH_FILMS_SUCCES","FETCH_FILMS_FAILURE","FETCH_PEOPLE_REQUEST","FETCH_PEOPLE_SUCCES","FETCH_PEOPLE_FAILURE","SET_PERSON","fetchFilmsRequest","payload","type","FilmsPage","dispatch","useNavigate","state","rootReducer","filmsReducer","useEffect","NotFoundContainer","NotFoundComponent","notFoundImage","NotFound","getId","url","replace","getImageUrl","id","PersonContainer","PeopleItem","name","image","e","currentTarget","People","people","fetchData","dataLength","hasMore","loader","next","index","PeoplePage","peopleReducer","HomeComponent","HomePage","Stars","Twinkle","Background","StarrySky","Wrapper","Layout","AboutFilmContainer","AboutFilm","opening_crawl","director","producer","FilmDetailsComponent","Object","values","getPeopleId","array","res","item","push","cache","window","localStorage","prefix","fetchPeopleById","prop","a","Promise","all","cached","getItem","JSON","parse","axios","get","response","data","setItem","stringify","FilmPage","React","setPeople","filmId","useParams","idList","characters","peopleList","PersonDetails","birth_year","eye_color","gender","hair_color","height","mass","skin_color","fetchPersonById","PersonPage","getPerson","Router","path","element","GlobalStyles","createGlobalStyle","theme","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","pending","error","combineReducers","action","results","requestFetchFilms","baseUrl","handleFetchFilms","call","i","filmEpisode","splice","console","log","put","requestFetchPeople","handleFetchPeople","watcherSaga","takeLatest","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","getDefaultMiddleware","thunk","serializableCheck","concat","reducer","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a885b63.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const Container = styled.div`\n    display: flex;\n    width: 80%;\n    margin: 0 auto;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: space-around;\n`","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n    flex-direction: column;\n    display: flex;\n    flex: 1;\n    margin-top: 20px;\n    justify-content: center;\n    align-items: center;\n    border-radius: 2px;\n    &:hover {\n        -webkit-transform: scale(1.05);\n        -ms-transform: scale(1.05);\n        transform: scale(1.05);\n    }\n\n    img {\n        display: flex;\n        height: 75%;\n        width: 90%;\n        border-radius: 2px 2px 0 0;\n    }\n    \n    p {\n        color: grey;\n        font-size: 1rem;\n        padding: 3vw;\n        justify-content: center;\n        align-items: center;\n        display: flex;\n        background-color: white;\n        height: 25%;\n        width: 90%;\n        border-radius: 0 0 2px 2px;\n    }\n\n    @media(max-width: 800px){\n        width: 45%;\n        height: 100%;\n    }\n    @media(max-width: 400px){\n        width: 90%;\n    }\n\n`","import { NavigateFunction } from \"react-router-dom\";\nimport { Container } from \"./styles\";\n\ninterface IFilm {\n    navigate: NavigateFunction,\n    episode: number,\n    title: string\n}\n\nexport default function FilmComponent(props: IFilm) {\n    const { episode, title, navigate } = props;\n    const episodeId = episode < 4 ? episode + 3 : episode - 3;\n    const img = `${process.env.REACT_APP_IMG_FILM_URL! + episodeId}.jpg`\n    return (\n        <Container onClick={() => navigate(`/films/${episode}`)}>\n            <img alt=\"film\" src={img} /> \n            <p> {title} </p>\n        </Container>\n    )\n}","import styled from \"styled-components\";\n\nexport const Loading = styled.div`\n    margin: 0 auto;\n    display: flex;\n    justify-self: center;\n    align-self: center;\n    display: flex;\n    width: 100px;\n    height: 100px;\n    :after {\n        content: \" \";\n        display: flex;\n        width: 64px;\n        height: 64px;\n        margin: 8px;\n        border-radius: 50%;\n        border: 6px solid #fff;\n        border-color: #fff transparent #fff transparent;\n        opacity: 0.5;\n        animation: lds-dual-ring 1.2s linear infinite;\n    }\n    @keyframes lds-dual-ring {\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n\n`","export default __webpack_public_path__ + \"static/media/logo.1b3980e8.png\";","import styled from \"styled-components\"\n\nexport const NavigationContainer = styled.nav`\n    display: flex;\n    flex-direction: row;\n    padding: 10px 10px 20px 10px;\n    .nav {\n        display: flex;\n        height: 100%;\n        color: skyblue;\n        font-size: 1rem;\n        font-weight: 600;\n        letter-spacing: 0.4rem;\n        text-decoration: none;\n        &:hover{\n            text-shadow: skyblue 1px 0 5px;\n        }\n    }\n    .nav-last {\n        display: flex;\n        height: 100%;   \n        font-size: 1rem;\n        font-weight: 600;\n        letter-spacing: 0.4rem;\n        color: white;\n        text-decoration: none;\n        &:hover{\n            text-shadow: white 1px 0 3px;\n        }\n    }\n\n`","import { Link } from \"react-router-dom\"\nimport { NavigationContainer } from \"./styled\"\n\ninterface INavigation {\n    title?: string,\n    person?: string,\n    isFilm?: boolean\n}\n\nexport default function Navigation(props: INavigation) {\n    const { title, person, isFilm } = props;\n\n    return (\n        <NavigationContainer className=\"block\">\n            <Link className=\"nav\" to=\"/\">Home</Link>\n            <p className=\"nav-last\">/</p>\n            <Link className={title || person ? \"nav\" : \"nav-last\"} to={isFilm ? \"/films\" : \"/people\"}> {isFilm ? \"Films\" : \"People\"}</Link>\n            <p className=\"nav-last\">/{title ? title : person}</p>\n        </NavigationContainer>\n    )\n}","import { Container } from \"./styled\";\nimport FilmComponent from \"../Film\";\nimport { NavigateFunction } from \"react-router-dom\";\nimport { Outlet } from \"react-router-dom\";\nimport { Loading } from \"../Loading\";\nimport logo from \"../../assets/images/logo.png\"\nimport Navigation from \"../Navigation\";\nimport { FilmType } from \"../../types\";\n\ninterface IFilms {\n    navigate: NavigateFunction,\n    films: FilmType[],\n}\n\nexport default function FilmsComponent(props: IFilms) {\n    const { films, navigate } = props;\n\n    return (\n        <Container>\n            <img className=\"logo\" alt=\"logo\" src={logo} />\n            <Navigation isFilm={true} />\n            {films.length > 0 ? films.map((film: FilmType) => {\n                return <FilmComponent\n                    navigate={navigate}\n                    episode={film.episode_id}\n                    key={film.title}\n                    title={film.title}\n                />\n            }) : <Loading data-testid=\"loader\"/>}\n            <Outlet />\n        </Container>\n    )\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './redux/store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","export const FETCH_FILMS_REQUEST = \"FETCH_FILMS_REQUEST\"\nexport const FETCH_FILMS_SUCCES = \"FETCH_FILMS_SUCCES\"\nexport const FETCH_FILMS_FAILURE = \"FETCH_FILMS_FAILURE\"\n\nexport const FETCH_PEOPLE_REQUEST = \"FETCH_PEOPLE_REQUEST\"\nexport const FETCH_PEOPLE_SUCCES = \"FETCH_PEOPLE_SUCCES\"\nexport const FETCH_PEOPLE_FAILURE = \"FETCH_PEOPLE_FAILURE\"\n\nexport const SET_PERSON = \"SET_PERSON\"\n\nexport const IMG_URL_EXTENTION=\".jpg\"\nexport const FILMS_URL_EXTENTION=\"films\"\nexport const PEOPLE_URL_EXTENTION=\"people\"\n","import { FETCH_FILMS_FAILURE, FETCH_FILMS_SUCCES, FETCH_FILMS_REQUEST } from \"../../constants\"\nimport { Response, FilmType } from \"../../types\"\n\nexport const fetchFilmsRequest = (payload: string) => ({\n    type: FETCH_FILMS_REQUEST,\n    payload\n})\n\nexport const fetchFilmsSucces = (payload: FilmType[]) => ({\n    type: FETCH_FILMS_SUCCES,\n    payload\n})\n\nexport const fetchFilmsFailure = (payload: Response) => ({\n    type: FETCH_FILMS_FAILURE,\n    payload\n})","import FilmsComponent from \"../../components/Films\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { fetchFilmsRequest } from \"../../redux/actions/filmsActions\";\nimport { FilmType } from \"../../types\";\n\nexport default function FilmsPage() {\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n    const state = useAppSelector(state => state.rootReducer.filmsReducer)\n    const films: FilmType[] = state.films\n\n    useEffect(() => {\n        if (films.length < 1) {\n            dispatch(fetchFilmsRequest(''))\n        }\n    }, [dispatch, films.length])\n\n    return (\n        <FilmsComponent\n            navigate={navigate}\n            films={films}\n        />\n    )\n}","import styled from \"styled-components\"\n\nexport const NotFoundContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    img {\n        opacity: 0.95;\n        display: flex;\n        width: 200px;\n        height: 200px;\n    }\n    p { \n        background-color: white;\n        margin-top: 10px;\n        font-size: 22px;\n        display: flex;\n        padding: 10px;\n    }\n\n    .return {\n        &:hover {\n            -webkit-transform: scale(1.2);\n            -ms-transform: scale(1.2);\n            transform: scale(1.2);\n        }\n        margin: 20px;\n        padding: 10px;\n        display: flex;\n        align-items: center;\n        background-color: white;\n        text-decoration: none;\n        color: black;\n        height: 50px;\n        border-radius: 4px;\n        cursor: pointer;\n    }\n`","export default __webpack_public_path__ + \"static/media/404.f7e4d6de.svg\";","import { Link } from \"react-router-dom\"\nimport { NotFoundContainer } from \"./styled\"\nimport notFoundImage from \"../../assets/images/404.svg\"\n\nexport default function NotFoundComponent() {\n    return (\n        <NotFoundContainer >\n            <img src={notFoundImage} alt=\"not found\" />\n            <p>It seems like the page you searching was destroyed by this thing above...</p>\n            <Link className=\"return\" to=\"/\">Return to Homepage</Link>\n        </NotFoundContainer>\n\n    )\n}","\nimport NotFoundComponent from \"../../components/NotFound\";\n\nexport default function NotFound() {\n    return (\n        <NotFoundComponent />\n    )\n}","import { PEOPLE_URL_EXTENTION } from \"../constants\";\n\nexport default function getId(url: string){\n    const id: string = url\n        .replace(`${process.env.REACT_APP_API_URL + PEOPLE_URL_EXTENTION}`, '')\n        .replace(/\\//g, '')\n    return id;\n}","import { IMG_URL_EXTENTION } from \"../constants\"\n\nexport default function getImageUrl(id: string) {\n        return `${process.env.REACT_APP_IMG_API_URL + id + IMG_URL_EXTENTION}`\n}\n\n","import styled from \"styled-components\";\n\nexport const PersonContainer = styled.div`\n    display: flex;\n    width: 22,5%;\n    height: 25vw;\n    justify-content: center;\n    padding: 5px;\n    &:hover {\n        -webkit-transform: scale(1.1);\n        -ms-transform: scale(1.1);\n        transform: scale(1.1);\n    }\n    div {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        height: 100%;\n    }\n    p {\n        color: grey;\n        font-size: 1rem;\n        justify-content: center;\n        align-items: center;\n        display: flex;\n        background-color: white;\n        height: 15%;\n        width: 100%\n        border-radius: 0 0 2px 2px;\n    }\n    img {\n        border-radius: 2px 2px 0 0;\n        object-fit: fill;\n        height: 75%;\n        display: flex;\n    }\n    @media(max-width: 800px){\n        width: 33%;\n        height: 60vw;\n        p {\n            font-size: 1rem;\n        }\n        img {\n            width: 100%;\n        }\n    }\n\n    @media(max-width: 450px){\n        width: 50%;\n        height: 80vw;\n        p {\n            font-size: 0.65rem;\n        }\n        img {\n            width: 100%;\n        }\n    }\n`","import { NavigateFunction } from \"react-router-dom\";\nimport { PersonContainer } from \"./styled\";\n\ninterface IPeopleItem {\n    name: string,\n    id?: string\n    image?: string,\n    navigate: NavigateFunction\n}\n\nexport default function PeopleItem(props: IPeopleItem) {\n    const { name, id, image, navigate } = props;\n    return (\n        <PersonContainer key={id}>\n            <div id={id} onClick={(e) => navigate(`/people/${e.currentTarget.id}`)}>\n                <img key={id + 'img'} src={image} alt=\"jedi\" />\n                <p key={id + 'name'}>{name}</p>\n            </div>\n        </PersonContainer>\n    )\n}","import styled from \"styled-components\";\n\nconst Container = styled.div`\n    .list {\n        display: flex;\n        width: 100%;\n        margin: 0 auto;\n        flex-direction: row;\n        justify-content: space-around;\n        flex-wrap: wrap;\n    }\n    flex-direction: column;\n    display: flex;\n    width: 80%;\n    margin: 0 auto;\n`\n\nexport default Container;","import InfiniteScroll from \"react-infinite-scroll-component\"\nimport getId from \"../../services/getId\"\nimport getImageUrl from \"../../services/getUrlArray\"\nimport { PersonType } from \"../../types\"\nimport { Loading } from \"../Loading\"\nimport PeopleItem from \"../PeopleItem\"\nimport Container from \"./styled\"\nimport logo from \"../../assets/images/logo.png\"\nimport Navigation from \"../Navigation\"\nimport { NavigateFunction } from \"react-router-dom\"\n\ninterface IPeople {\n    people: PersonType[],\n    url: string,\n    fetchData: () => void,\n    navigate: NavigateFunction,\n}\n\nexport default function People(props: IPeople) {\n    const { people, url, fetchData, navigate } = props;\n    return (\n        <InfiniteScroll\n            dataLength={people.length}\n            hasMore={!!url}\n            loader={<Loading />}\n            next={fetchData}\n        >\n            <Container data-testid=\"container\">\n                <img className=\"logo\" alt=\"logo\" src={logo} />\n                <Navigation />\n                {people.length > 0 ?\n                    <div className=\"list\">\n                        {\n                            people.map((person: PersonType, index: number) => {\n                                if (people.length === index + 1) {\n                                    return <PeopleItem navigate={navigate} key={person.name} name={person.name} id={getId(person.url)} image={getImageUrl(getId(person.url))} />\n                                } else {\n                                    return <PeopleItem navigate={navigate} key={person.name} name={person.name} id={getId(person.url)} image={getImageUrl(getId(person.url))} />\n                                }\n                            })\n                        }\n                    </div> : <Loading data-testid=\"loader\" />}\n            </Container>\n\n        </InfiniteScroll>\n    )\n}","import { FETCH_PEOPLE_FAILURE, FETCH_PEOPLE_SUCCES, FETCH_PEOPLE_REQUEST, SET_PERSON } from \"../../constants\"\nimport { PersonType } from \"../../types\"\n\nexport const setPerson = (payload: PersonType) => ({\n    type: SET_PERSON,\n    payload\n})\n\nexport const fetchPeopleRequest = (payload: string) => ({\n    type: FETCH_PEOPLE_REQUEST,\n    payload\n})\n\nexport const fetchPeoplesSucces = (payload: any) => ({\n    type: FETCH_PEOPLE_SUCCES,\n    payload\n})\n\nexport const fetchPeoplesFailure = (payload: object) => ({\n    type: FETCH_PEOPLE_FAILURE,\n    payload\n})","import People from \"../../components/People\";\nimport { useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../hooks\";\nimport { PeopleState, PersonType } from \"../../types\";\nimport { fetchPeopleRequest } from \"../../redux/actions/peopleActions\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function PeoplePage(){\n    const state: PeopleState = useAppSelector(state => state.rootReducer.peopleReducer)\n    const people: PersonType[] = state.people\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n    const url: string = state.next\n\n    const fetchData = () => {\n        dispatch(fetchPeopleRequest(url))\n    }\n\n    useEffect(() => {\n        fetchData()\n        // eslint-disable-next-line\n    }, [])\n\n\n    return (\n        <People \n            people={people}\n            url={url}\n            fetchData={fetchData}\n            navigate={navigate} \n        />\n    )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    .home {\n        margin-top: 16px;\n        display: flex;\n        flex-direction: row;\n        width: 80%;\n        height: 100%;\n        justify-content: space-between;\n        @media(max-width: 1140px){\n            flex-direction: column;\n            align-items: center;\n        }\n        .container {\n            display: flex;\n            height: 100%;\n            width: 45%;\n            flex-direction: column;\n            border-radius: 2px;\n            &:hover {\n                -webkit-transform: scale(1.1);\n                -ms-transform: scale(1.1);\n                transform: scale(1.1);\n            }\n            @media(max-width: 1140px){\n                width: 100%;\n                margin-bottom: 20px;\n            }\n            p {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                font-size: 1.3rem;\n                background-color: white;\n                width: 100%;\n                height: 50px;\n            }\n        }\n        img {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`","import { Container } from \"./styled\";\nimport logo from \"../../assets/images/logo.png\"\nimport { NavigateFunction } from \"react-router-dom\";\n\ninterface IHome {\n    navigate: NavigateFunction,\n}\n\nexport default function HomeComponent(props: IHome) {\n    const { navigate } = props;\n    return (\n        <Container>\n            <div className=\"logo-container\">\n                <img className=\"logo\" alt=\"logo\" src={logo} />\n            </div>\n            <div className=\"home\">\n                <div className=\"container\" onClick={() => navigate(\"/people\")}>\n                    <img alt=\"characters\" src=\"https://starwars-visualguide.com/assets/img/categories/character.jpg\" />\n                    <p>\n                        Characters\n                    </p>\n                </div>\n                <div className=\"container\" onClick={() => navigate(\"/films\")}>\n                    <img alt=\"films\" src=\"https://starwars-visualguide.com/assets/img/categories/starships.jpg\" />\n                    <p>\n                        Films\n                    </p>\n                </div>\n            </div>\n        </Container>\n    )\n}","import { useNavigate } from \"react-router-dom\"\nimport HomeComponent from \"../../components/Home\"\n\nexport default function HomePage(props: any) {\n    const navigate = useNavigate();\n    return(\n        <HomeComponent navigate={navigate}/>\n    )\n}","import styled from \"styled-components\";\n\nexport const Stars = styled.div`\n    background: #000 url(http://www.script-tutorials.com/demos/360/images/stars.png) repeat top center;\n    z-index:-1;\n    min-height: 100%;\n    width: 100%;\n    position: relative;\n}\n`\nexport const Twinkle = styled.div`\n    background: transparent url(http://www.script-tutorials.com/demos/360/images/twinkling.png) repeat top center;\n    z-index:-1;\n    position: fixed;\n    top: 0;\n    min-height: 100%;\n    width: 100%;\n    -moz-animation:move-twink-back 200s linear infinite;\n    -ms-animation:move-twink-back 200s linear infinite;\n    -o-animation:move-twink-back 200s linear infinite;\n    -webkit-animation:move-twink-back 200s linear infinite;\n    animation:move-twink-back 200s linear infinite;\n`\nexport const Background = styled.div`\n    width: 100%;\n    height: 100%;\n    display: block;\n    position: fixed;\n    top: 0;\n    z-index: -1;\n`\n","import { Background, Stars, Twinkle } from \"./styled\";\n\nexport default function StarrySky() {\n    return (\n        <Background>\n            <Stars />\n            <Twinkle />\n        </Background>\n    )\n}","import styled from \"styled-components\"\n\nexport const Wrapper = styled.div`\n    width: 100%;\n    height: 100vh;\n    margin: 0 auto;\n`","import { Outlet } from \"react-router-dom\";\nimport StarrySky from \"../Background\";\nimport { Wrapper } from \"./styled\";\n\nexport default function Layout() {\n    return (\n        <Wrapper>\n            <Outlet />\n            <StarrySky />\n        </Wrapper>\n    )\n}","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n    width: 80%;\n    height: 100%;\n    margin: 0 auto;\n    .people {\n        width: 100%;\n        flex-direction: row;\n        flex-wrap: wrap;\n    }\n`","import styled from \"styled-components\"\n\nexport const AboutFilmContainer = styled.div`\n    .container {\n        display: flex;\n        flex-direction: column;\n        width: calc(100% - 10px);\n        height: 100%;\n        margin: 0 auto 20px;\n        background-color: white;\n        padding: 30px;\n    }\n    \n`","import Navigation from \"../../Navigation\"\nimport { AboutFilmContainer } from \"./styled\"\nimport logo from \"../../../assets/images/logo.png\"\nimport { FilmType } from \"../../../types\"\n\ninterface IAboutFilm {\n    episode: number,\n    film: FilmType\n}\n\nexport default function AboutFilm(props: IAboutFilm) {\n    const { episode, film } = props\n    const { title, opening_crawl, director, producer } = film;\n\n    return (\n        <AboutFilmContainer>\n            <Navigation title={title} isFilm={true} />\n            <div className=\"container\">\n                <h1>{title && title}</h1>\n                <h3>Episode {episode}</h3>\n                <p>{opening_crawl}</p>\n                <h4>Director: {director}</h4>\n                <h4>Producer: {producer}</h4>\n            </div>\n        </AboutFilmContainer>\n    )\n}","import { Container } from \"./styled\";\nimport PeopleItem from \"../PeopleItem\";\nimport { Loading } from \"../Loading\";\nimport AboutFilm from \"./AboutFilm/index\";\nimport PeopleContainer from \"../People/styled\";\nimport { FilmType } from \"../../types\";\nimport { NavigateFunction } from \"react-router-dom\";\nimport logo from \"../../assets/images/logo.png\"\n\ninterface IPerson {\n    name: string,\n    id: string,\n    image: string,\n}\n\ninterface IFilmDetails {\n    films: FilmType[],\n    people: IPerson[],\n    episode: number,\n    navigate: NavigateFunction,\n}\n\nexport default function FilmDetailsComponent(props: IFilmDetails) {\n    const { episode, films, people, navigate } = props\n    return (\n        <Container>\n            <img className=\"logo\" alt=\"logo\" src={logo} />\n            {films.length > 0 ?\n                <AboutFilm\n                    episode={episode}\n                    film={films[episode - 1]}\n                /> : null}\n            <PeopleContainer className=\"people\">\n                {people.length > 0 ? Object.values(people).map((person) => {\n                    return (\n                        <PeopleItem navigate={navigate} key={person.name} name={person.name} id={person.id} image={person.image} />\n                    )\n                }) : <Loading data-testid=\"loader\" />}\n            </PeopleContainer>\n        </Container>\n    )\n}","import getId from \"./getId\";\n\nconst getPersonId = (url: string) => getId(url)\n\nexport default function getPeopleId(array: Array<string>) {\n    const res: Array<string> = [];\n    array.map((item: string) => {\n        return res.push(getPersonId(item))\n    })\n    return res;\n}","import axios from \"axios\"\nimport { PEOPLE_URL_EXTENTION } from \"../../constants\"\nimport { PersonType } from \"../../types\";\n\nconst cache = window.localStorage;\nconst prefix = 'swCache'\n\nexport default async function fetchPeopleById(prop: any) {\n    const people = Promise.all(prop.map(async (id: string) => {\n        const url = `${process.env.REACT_APP_API_URL + PEOPLE_URL_EXTENTION + \"/\" + id}`\n        const cached = cache.getItem(`${prefix}.${url}`)\n        if (cached) return JSON.parse(cached);\n        const response = await axios.get(url)\n        const person: PersonType = response.data\n        cache.setItem(`${prefix}.${url}`, JSON.stringify(person));\n        return person;\n    }));\n    return people;\n}","import { useNavigate, useParams } from \"react-router-dom\";\nimport * as React from \"react\"\nimport FilmDetailsComponent from \"../../components/FilmDetails\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { FilmType } from \"../../types\"\nimport getPeopleId from \"../../services/getPeopleId\"\nimport getImageUrl from \"../../services/getUrlArray\"\nimport getId from \"../../services/getId\"\nimport fetchPeopleById from \"../../services/api/fetchPeopleById\"\nimport { fetchFilmsRequest } from \"../../redux/actions/filmsActions\";\n\ninterface IPerson {\n    name: string,\n    id: string,\n    image: string,\n}\n\nexport default function FilmPage() {\n    const initialState: IPerson[] = [];\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n    const [people, setPeople] = React.useState(initialState)\n    const films: FilmType[] = useAppSelector(state => state.rootReducer.filmsReducer.films)\n    const { filmId } = useParams()\n\n    React.useEffect(() => {\n        if (films.length > 0) {\n            const charactersUrlList = films[+filmId! - 1].characters\n            const idList = getPeopleId(charactersUrlList);\n            (async () => {\n                const response = await fetchPeopleById(idList)\n                const peopleList = response.map(({ name, url }) => {\n                    const id = getId(url);\n                    const image = getImageUrl(id)\n                    return {\n                        id,\n                        name,\n                        image\n                    }\n                })\n                setPeople(peopleList)\n            })()\n        } else {\n            dispatch((fetchFilmsRequest(\"\")))\n        }\n    }, [films, filmId, dispatch])\n\n    return (\n        <FilmDetailsComponent\n            films={films}\n            people={people}\n            episode={+filmId!}\n            navigate={navigate}\n        />\n    )\n}","import styled from \"styled-components\";\n\nexport const PersonContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 0 auto;\n\n    .info {\n        width: 100%;\n        height: 30%;\n        background-color: white;\n        margin: 5px auto;\n        flex-direction: row;\n        border-radius: 2px;\n        display: flex;\n    }\n\n    .person {\n        width: 23%;\n        height: 300px;\n        object-fit: cover;\n        object-position: center 20%;\n        @media(max-width: 800px){\n            width: 35%;\n        }\n    }\n\n    h1 {\n        font-size: 24px;\n        font-weight: 600;\n        color: black;\n        padding: 20px;\n    }\n\n    ul {\n        padding: 10px 20px 20px 20px;\n    }\n    li {\n        padding: 1.5px;\n        font-size: 14px;\n        color: grey;\n    }\n    `\n\n","\nimport { PersonType } from \"../../types\";\nimport { PersonContainer } from \"../PersonDetails/styled\";\nimport Navigation from \"../Navigation\";\n\ninterface IPersonDetails {\n    id?: string;\n    person: PersonType\n}\n\nexport default function PersonDetails(props: IPersonDetails) {\n    const { id, person } = props;\n    const {\n        birth_year,\n        eye_color,\n        gender,\n        hair_color,\n        height,\n        mass,\n        name,\n        skin_color,\n    } = person;\n    const img = `${process.env.REACT_APP_IMG_API_URL}${id}.jpg`\n\n    return (\n        <PersonContainer>\n            <Navigation person={name} />\n            <div className=\"info\" data-testid=\"info\">\n                <img src={img} alt=\"character\" className=\"person\" />\n                <div>\n                    <h1>{name}</h1>\n                    <div>\n                        <ul>\n                            <li>Birth Year: {birth_year}</li>\n                            <li>Height: {height}</li>\n                            <li>Mass: {mass}</li>\n                            <li>Gender: {gender}</li>\n                            <li>Eye color: {eye_color}</li>\n                            <li>Hair color: {hair_color}</li>\n                            <li>Skin color: {skin_color}</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </PersonContainer>\n    )\n}","import axios from \"axios\"\nimport { PEOPLE_URL_EXTENTION } from \"../../constants\"\nimport { PersonType } from \"../../types\";\n\nconst cache = window.localStorage;\nconst prefix = 'swCache'\n\nexport default async function fetchPersonById(id: string | undefined) {\n    const url = `${process.env.REACT_APP_API_URL + PEOPLE_URL_EXTENTION + \"/\" + id}`\n    const cached = cache.getItem(`${prefix}.${url}`)\n    if (cached) return JSON.parse(cached);\n    const response = await axios.get(url)\n    const person: PersonType = response.data\n    cache.setItem(`${prefix}.${url}`, JSON.stringify(person));\n    return person;\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    flex-direction: column;\n    display: flex;\n    width: 80%;\n    margin: 0 auto;\n`","import * as React from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport PersonDetails from \"../../components/PersonDetails\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { setPerson } from \"../../redux/actions/peopleActions\";\nimport { PersonType } from \"../../types\";\nimport fetchPersonById from \"../../services/api/fetchPersonById\";\nimport { Loading } from \"../../components/Loading\";\nimport logo from \"../../assets/images/logo.png\"\nimport Navigation from \"../../components/Navigation\";\nimport { Container } from \"./styled\";\n\nexport default function PersonPage() {\n    const params = useParams()\n    const { id } = params;\n    const dispatch = useAppDispatch()\n    const person: any = useAppSelector(state => state.rootReducer.peopleReducer.person)\n    const getPerson = async () => {\n        const person: PersonType = await fetchPersonById(id)\n        dispatch(setPerson(person))\n    }\n    React.useEffect(() => {\n        getPerson()\n        // eslint-disable-next-line\n    }, [])\n    return (\n        <Container>\n            <img className=\"logo\" alt=\"logo\" src={logo} />\n            {person ? <PersonDetails person={person} id={id} /> : <Loading data-testid=\"loader\" />}\n        </Container>\n\n    )\n}","import { Routes, Route, } from \"react-router-dom\";\nimport Films from \"./films\";\nimport NotFound from \"./notfound\";\nimport People from \"./people\";\nimport Home from \"./home\";\nimport Layout from \"../components/Layout\"\nimport Film from \"./film\";\nimport Person from \"./person\";\n\nexport default function Router() {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<Layout />}>\n                <Route index element={<Home />} />\n                <Route path=\"swapi-db\" element={<Home />} />\n                <Route path=\"films\" element={<Films />} />\n                <Route path=\"films/:filmId\" element={<Film />} />\n                <Route path=\"people\" element={<People />} />\n                <Route path=\"people/:id\" element={<Person />} />\n                <Route path=\"*\" element={<NotFound />} />\n            </Route>\n        </Routes>\n    )\n}","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n        padding: 0;\n        margin: 0;\n        -webkit-transition: all 0.3s ease;\n        -moz-transition: all 0.3s ease;\n        -o-transition: all 0.3s ease;\n        transition: all 0.3s ease;\n    }\n\n    .App {\n        width: 100%;\n        height: 100%;\n    }\n    \n    #root {\n        width: 100%;\n        height: 100%;\n    }\n\n    li {\n        list-style-type: none;\n        white-space: nowrap;\n    }\n\n    .block {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        padding-left: 5px;\n    }\n    \n    .logo {\n        margin: 20px auto;\n        padding: 30px;\n        width: 45%;\n        display: flex;\n        @media(max-width: 800px) {\n            padding: 20px;\n            width: 65%;\n        }\n        @media(max-width: 400px) {\n            padding: 10px;\n            width: 65%;\n        }\n        &-container {\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n        }\n    }\n\n    body {\n        margin: 0 auto;\n        width: 100%;\n        height: 100vh;\n        font-family: 'Montserrat', sans-serif;\n    }\n\n    // background animation\n    @keyframes move-twink-back {\n        from {background-position:0 0;}\n        to {background-position:-10000px 5000px;}\n    }\n    @-webkit-keyframes move-twink-back {\n        from {background-position:0 0;}\n        to {background-position:-10000px 5000px;}\n    }\n    @-moz-keyframes move-twink-back {\n        from {background-position:0 0;}\n        to {background-position:-10000px 5000px;}\n    }\n\n`\n\nexport default GlobalStyles;","import Router from \"./pages\";\nimport GlobalStyles from \"./assets/global.styled\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  // add theming\n}\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        <Router />\n      </ThemeProvider>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AnyAction } from \"redux\";\nimport { FETCH_FILMS_FAILURE, FETCH_FILMS_SUCCES, FETCH_FILMS_REQUEST } from \"../../constants\"\nimport { FilmState } from \"../../types\";\n\nconst initialState: FilmState = {\n    pending: false,\n    error: \"\",\n    films: [],\n};\n\nexport default function filmsReducer(state = initialState, action: AnyAction): FilmState {\n    switch (action.type) {\n        case FETCH_FILMS_REQUEST:\n            return {\n                ...state,\n                pending: true,\n            }\n        case FETCH_FILMS_SUCCES:\n            return {\n                ...state,\n                pending: false,\n                films: action.payload,\n                error: null\n            }\n        case FETCH_FILMS_FAILURE:\n            return {\n                ...state,\n                pending: false,\n                error: action.payload.error\n            }\n        default: {\n            return state;\n        }\n    }\n}","import { AnyAction } from \"redux\";\nimport { FETCH_PEOPLE_FAILURE, FETCH_PEOPLE_SUCCES, FETCH_PEOPLE_REQUEST, SET_PERSON } from \"../../constants\";\nimport { PeopleState } from \"../../types\"\n\nconst initialState: PeopleState = {\n    pending: false,\n    error: null,\n    people: [],\n    next: \"\"\n}\n\nexport default function peopleReducer(state = initialState, action: AnyAction): PeopleState {\n    switch (action.type) {\n        case SET_PERSON:\n            return {\n                ...state,\n                person: action.payload\n            }\n        case FETCH_PEOPLE_REQUEST:\n            return {\n                ...state,\n                pending: true,\n            }\n        case FETCH_PEOPLE_SUCCES:\n            return {\n                ...state,\n                pending: false,\n                people: [...state.people, ...action.payload.results],\n                next: action.payload.next,\n                error: null\n            }\n        case FETCH_PEOPLE_FAILURE:\n            return {\n                ...state,\n                pending: false,\n                error: action.payload.error\n            }\n        default: {\n            return state;\n        }\n    }\n}","import { combineReducers } from \"redux\";\nimport filmsReducer from \"./filmsReducer\";\nimport peopleReducer from \"./peopleReducer\";\n\nexport default combineReducers({\n    peopleReducer,\n    filmsReducer\n})","import axios from \"axios\";\nimport { FILMS_URL_EXTENTION } from \"../../../constants\";\n\nconst cache = window.localStorage;\nconst prefix = 'swCache'\n\nexport async function requestFetchFilms(url: string) {\n    const cached = cache.getItem(`${prefix}.${url}`)\n    if(cached) return JSON.parse(cached);\n    \n    if (url !== \"\") {\n        const res = await axios.get(url)\n        cache.setItem(`${prefix}.${url}`, JSON.stringify(res))\n        return res;\n    } else {\n        const baseUrl = `${process.env.REACT_APP_API_URL + FILMS_URL_EXTENTION}`\n        const res = await axios.get(baseUrl)\n        cache.setItem(`${prefix}.${baseUrl}`, JSON.stringify(res))\n        return res;\n    }\n}","import { call, put } from \"@redux-saga/core/effects\";\nimport { fetchFilmsSucces } from \"../../actions/filmsActions\";\nimport { requestFetchFilms } from \"../requests/films\";\n\nimport { FilmType, Response } from \"../../../types\";\n\nexport function* handleFetchFilms(action: any) {\n    const url: string = action.payload\n    try {\n\n        //getting films\n        const response: Response = yield call(requestFetchFilms, url)\n        const { data: { results } }: Response = response;\n        const films: FilmType[] = []\n\n         //puting films in episode id order\n        for (let i = 0; i < results.length; i++) {\n            const film = results[i];\n            const filmEpisode = film.episode_id;\n            films.splice(filmEpisode - 1, 0, film);\n        }\n        console.log(results)\n        console.log(films)\n        yield put(fetchFilmsSucces(films));\n    } catch (error) {\n        console.log(error);\n    }\n}","import axios from \"axios\";\nimport { PEOPLE_URL_EXTENTION } from \"../../../constants\";\n\nconst cache = window.localStorage;\nconst prefix = \"swCache\"\nconst baseUrl = `${process.env.REACT_APP_API_URL + PEOPLE_URL_EXTENTION}`\n\nexport async function requestFetchPeople(url: string) {\n    const cached = cache.getItem(`${prefix}.${url}`)\n    if(cached) return JSON.parse(cached);\n\n    if (url !== \"\") {\n        const res = await axios.get(url);\n        cache.setItem(`${prefix}.${url}`, JSON.stringify(res))\n        return res;\n    } else {\n        const res = await axios.get(baseUrl)\n        cache.setItem(`${prefix}.${baseUrl}`, JSON.stringify(res))\n        return res;\n    }   \n}","import { call, put } from \"@redux-saga/core/effects\";\nimport { fetchPeoplesSucces } from \"../../actions/peopleActions\";\nimport { requestFetchPeople } from \"../requests/people\";\nimport { Response } from \"../../../types\";\n\nexport function* handleFetchPeople(action: any) {\n\n    const url: string = action.payload\n    try {\n        const response: Response = yield call(requestFetchPeople, url);\n        const { data: { results, next } }: any = response;\n        yield put(fetchPeoplesSucces({ results, next }));\n    } catch (error) {\n        console.log(error)\n    }\n}","import { takeLatest } from \"redux-saga/effects\"\nimport { FETCH_FILMS_REQUEST, FETCH_PEOPLE_REQUEST } from \"../../constants\"\nimport { handleFetchFilms } from \"./handlers/films\"\nimport { handleFetchPeople } from \"./handlers/people\"\n\nexport function* watcherSaga() {\n    yield takeLatest(FETCH_FILMS_REQUEST, handleFetchFilms)\n    yield takeLatest(FETCH_PEOPLE_REQUEST, handleFetchPeople)\n};","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers/\"\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport { watcherSaga } from \"./sagas/rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({ thunk: false, serializableCheck: false }).concat(sagaMiddleware),\n    reducer: {\n        rootReducer\n    }\n})\n\nsagaMiddleware.run(watcherSaga)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from \"./redux/store\"\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}